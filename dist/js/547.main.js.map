{"version":3,"file":"js/547.main.js","mappings":"8EACA,IAAIA,GAAY,EAEhBC,SAASC,iBAAiB,oBAAoB,WAC7BD,SAASE,iBAAiB,eAElCC,SAAQC,IASb,SAASC,EAAYD,GACC,KAAhBA,EAAME,MACRF,EAAMG,UAAUC,IAAI,aAEpBJ,EAAMG,UAAUE,OAAO,YAE3B,CAbAJ,EAAYD,GAGZA,EAAMH,iBAAiB,SAAS,WAC9BI,EAAYD,EACd,GAQA,IAGF,MAAMM,EAAQV,SAASW,eAAe,eAChCC,EAAcZ,SAASa,uBAAuB,SAAS,GAE7Db,SAASW,eAAe,eAAeV,iBAAiB,UAAU,SAAUa,GAC1EA,EAAEC,iBACF,MAAMC,EAAOF,EAAEG,OACTC,EAAW,IAAIC,SAASH,GAG9BI,MAAMJ,EAAKK,OAAQ,CACjBC,OAAQ,OACRC,KAAML,IACLM,MAAKC,IACFA,EAASC,IACX3B,GAAY,EACZW,EAAMiB,MAAMC,QAAU,QACtBZ,EAAKa,QACL7B,SAASE,iBAAiB,eAAeC,SAAQC,IAC/CA,EAAMG,UAAUE,OAAO,YAAY,MAGrCqB,MAAM,kCACNC,QAAQC,MAAM,SAAUP,GAC1B,IACCQ,OAAMD,IACPF,MAAM,oCACNC,QAAQC,MAAM,aAAcA,EAAM,GAEtC,IAGA,MAAME,EAAelC,SAASW,eAAe,iBACzCuB,IACFA,EAAaC,OAAS,WAChBpC,IACF+B,MAAM,cACN/B,GAAY,EAEhB,GAIFa,EAAYwB,QAAU,WACpB1B,EAAMiB,MAAMC,QAAU,MACxB,EAGAS,OAAOD,QAAU,SAAUE,GACrBA,EAAMrB,QAAUP,IAClBA,EAAMiB,MAAMC,QAAU,OAE1B,CACF,G","sources":["webpack://website/./src/js/form.js"],"sourcesContent":["// グローバル変数 'submitted' を宣言\r\nlet submitted = false;\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n  const inputs = document.querySelectorAll(\".input-text\");\r\n\r\n  inputs.forEach(input => {\r\n    // 初期チェック\r\n    toggleLabel(input);\r\n\r\n    // 入力イベントに応じてクラスを切り替え\r\n    input.addEventListener(\"input\", function () {\r\n      toggleLabel(input);\r\n    });\r\n\r\n    function toggleLabel(input) {\r\n      if (input.value !== \"\") {\r\n        input.classList.add(\"not-empty\");\r\n      } else {\r\n        input.classList.remove(\"not-empty\");\r\n      }\r\n    }\r\n  });\r\n\r\n  const modal = document.getElementById('thanksModal');\r\n  const closeButton = document.getElementsByClassName('close')[0];\r\n\r\n  document.getElementById('contactForm').addEventListener('submit', function (e) {\r\n    e.preventDefault();\r\n    const form = e.target;\r\n    const formData = new FormData(form);\r\n\r\n    // 送信処理\r\n    fetch(form.action, {\r\n      method: 'POST',\r\n      body: formData\r\n    }).then(response => {\r\n      if (response.ok) {\r\n        submitted = true;  // 送信成功時に submitted を true にする\r\n        modal.style.display = \"block\";  // モーダルを表示\r\n        form.reset();  // フォームをリセット\r\n        document.querySelectorAll('.input-text').forEach(input => {\r\n          input.classList.remove('not-empty');\r\n        });\r\n      } else {\r\n        alert('送信に問題が発生しました。サーバーからエラーが返されました。');\r\n        console.error('送信エラー:', response);\r\n      }\r\n    }).catch(error => {\r\n      alert('送信に問題が発生しました。ネットワークエラーの可能性があります。');\r\n      console.error('ネットワークエラー:', error);  // エラーをコンソールに出力\r\n    });\r\n  });\r\n\r\n  // iframe の onload イベントを別途設定\r\n  const hiddenIframe = document.getElementById('hidden_iframe');\r\n  if (hiddenIframe) {\r\n    hiddenIframe.onload = function () {\r\n      if (submitted) {\r\n        alert('送信が完了しました。');\r\n        submitted = false;  // リセット\r\n      }\r\n    };\r\n  }\r\n\r\n  // モーダルのクローズボタン\r\n  closeButton.onclick = function () {\r\n    modal.style.display = \"none\";\r\n  };\r\n\r\n  // モーダル外をクリックしたときの閉じる処理\r\n  window.onclick = function (event) {\r\n    if (event.target == modal) {\r\n      modal.style.display = \"none\";\r\n    }\r\n  };\r\n});\r\n"],"names":["submitted","document","addEventListener","querySelectorAll","forEach","input","toggleLabel","value","classList","add","remove","modal","getElementById","closeButton","getElementsByClassName","e","preventDefault","form","target","formData","FormData","fetch","action","method","body","then","response","ok","style","display","reset","alert","console","error","catch","hiddenIframe","onload","onclick","window","event"],"sourceRoot":""}